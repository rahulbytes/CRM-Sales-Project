SELECT * FROM accounts
SELECT * FROM products
SELECT * FROM sales_pipeline
SELECT * FROM sales_team

-- Count and Revenue of all the deal stages.
SELECT deal_stage,COUNT(opportunity_id)AS total_transactions,
COALESCE(SUM(close_value),0)AS total_revenue FROM sales_pipeline
GROUP BY deal_stage;

--Transactions and revenue generated by each sales agent.
SELECT sales_agent, COUNT(opportunity_id)AS total_transactions, 
COALESCE(SUM(close_value),0)AS revenue_generated FROM sales_pipeline
GROUP BY sales_agent
ORDER BY revenue_generated DESC, total_transactions DESC;

--Total revenue and transactions as per regional offices.
SELECT regional_office, COUNT(opportunity_id)AS total_transactions,
SUM(close_value)AS revenue_generated FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
GROUP BY regional_office;

--Count and revenue from each product.
SELECT product, COUNT(opportunity_id)AS Total_transactions,
SUM(close_value)AS total_sales FROM sales_pipeline
GROUP BY product
ORDER BY total_transactions DESC, total_sales DESC;

-- Total revenue and transactions made with different accounts/customers.
SELECT CASE WHEN account IS NULL THEN 'Not Available' ELSE account END AS Account_name,
COUNT(opportunity_id)AS Total_transactions,
COALESCE(SUM(close_value),0)AS total_sales FROM sales_pipeline
GROUP BY account
ORDER BY total_transactions DESC, total_sales DESC;

-- Total revenue and transactions made with different countries.
SELECT office_location AS country,
COUNT(opportunity_id)AS Total_transactions,
COALESCE(SUM(close_value),0)AS total_sales FROM sales_pipeline sp
JOIN accounts a ON a.account = sp.account
GROUP BY country
ORDER BY total_transactions DESC, total_sales DESC;

-- Total sales and total transactions quartely.
SELECT EXTRACT (YEAR FROM close_date)AS year,
EXTRACT(QUARTER FROM close_date)AS quarter,
COUNT(opportunity_id)AS Total_transactions,
SUM(close_value)AS total_sales FROM sales_pipeline
WHERE close_date IS NOT NULL
GROUP BY year, quarter;

--Total Sales and Count of transactions for Managers.
SELECT Manager, COUNT(opportunity_id)AS total_transactions,
SUM(close_value)AS Total_sales, ROUND(AVG(close_value),2)AS avg_sale_value,
COUNT(CASE WHEN deal_stage = 'Won' THEN (opportunity_id) END) AS Sales_count_won,
COUNT(CASE WHEN deal_stage = 'Engaging' THEN (opportunity_id) END) AS Sales_count_engaging,
COUNT(CASE WHEN deal_stage = 'Lost' THEN (opportunity_id) END) AS Sales_count_lost
FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
GROUP BY manager 
ORDER BY total_sales DESC;

--New opportunities in Q4 by Team.
SELECT manager, COUNT(opportunity_id) AS New_opportinites FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
WHERE engage_date BETWEEN '2017-10-01' AND '2017-12-31'
GROUP BY manager 
ORDER BY New_opportinites DESC;

--Transactions which have a potential to be closed Q4 by team.
SELECT manager, COUNT(opportunity_id)AS Potential_Transactions
FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
WHERE deal_stage = 'Engaging'
GROUP BY manager;

--Sales which we can be potentially earn in Q4 by team.
SELECT manager,SUM(sale_price)AS sales_value FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
JOIN products p ON p.product = sp.product
WHERE deal_stage IN ('Prospecting','Engaging')
GROUP BY manager;

--Performace by agent for Q4(WON):
SELECT sales_agent, COUNT(opportunity_id)AS Num_of_sales,
SUM(close_value)AS Total_sales_amount,
ROUND(AVG(close_value),2)AS Avg_sales_amount,
ROUND(AVG(close_date-engage_date)/7,2)AS avg_weeks_to_close
FROM sales_pipeline
WHERE deal_stage = 'Won' AND close_date BETWEEN '2017-10-01' AND '2017-12-31'
GROUP BY sales_agent;

--Avg weeks taken to close deal:
SELECT manager, ROUND(AVG(close_date - engage_date)/7,2) AS Avg_weeks_to_close FROM sales_pipeline sp
JOIN sales_team st ON st.sales_agent = sp.sales_agent
GROUP BY manager;

-- Conversion rate by manager:
WITH my_cte1 AS(
	SELECT manager, COUNT(opportunity_id) AS Total_count FROM sales_pipeline sp
	JOIN sales_team st ON st.sales_agent = sp.sales_agent
	GROUP BY manager
),
my_cte2 AS(
	SELECT manager, COUNT(opportunity_id) AS Count_won FROM sales_pipeline sp
	JOIN sales_team st ON st.sales_agent = sp.sales_agent
	WHERE deal_stage = 'Won'
	GROUP BY manager
)

SELECT my_cte1.manager, ROUND((Count_won *100.0)/Total_count,2) AS Conversion_rate 
FROM my_cte1
JOIN my_cte2 ON my_cte2.manager = my_cte1.manager
